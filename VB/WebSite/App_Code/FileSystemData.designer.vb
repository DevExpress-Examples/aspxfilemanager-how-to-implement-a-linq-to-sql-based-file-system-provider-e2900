'INSTANT VB TODO TASK: There is no equivalent to #pragma directives in VB.NET:
'#pragma warning disable 1591
'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18047
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------


Imports Microsoft.VisualBasic
Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection



<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FmExampleDb")> _
Partial Public Class DbFileSystemDataContext
	Inherits System.Data.Linq.DataContext

	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()

  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertDbFileSystemItem(ByVal instance As DbFileSystemItem)
  End Sub
  Partial Private Sub UpdateDbFileSystemItem(ByVal instance As DbFileSystemItem)
  End Sub
  Partial Private Sub DeleteDbFileSystemItem(ByVal instance As DbFileSystemItem)
  End Sub
  #End Region

	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("FmExampleDbConnectionString").ConnectionString, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated()
	End Sub

	Public ReadOnly Property DbFileSystemItems() As System.Data.Linq.Table(Of DbFileSystemItem)
		Get
			Return Me.GetTable(Of DbFileSystemItem)()
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FileSystem")> _
Partial Public Class DbFileSystemItem
	Implements INotifyPropertyChanging, INotifyPropertyChanged

	Private Shared emptyChangingEventArgs As New PropertyChangingEventArgs(String.Empty)

	Private _Id As Integer

	Private _Name As String

	Private _IsFolder As Boolean

	Private _ParentId As Integer

	Private _Data As System.Data.Linq.Link(Of System.Data.Linq.Binary)

	Private _LastWriteTime As System.Nullable(Of System.DateTime)

	#Region "Extensibility Method Definitions"
	Partial Private Sub OnLoaded()
	End Sub
	Partial Private Sub OnValidate(ByVal action As System.Data.Linq.ChangeAction)
	End Sub
	Partial Private Sub OnCreated()
	End Sub
	Partial Private Sub OnIdChanging(ByVal value As Integer)
	End Sub
	Partial Private Sub OnIdChanged()
	End Sub
	Partial Private Sub OnNameChanging(ByVal value As String)
	End Sub
	Partial Private Sub OnNameChanged()
	End Sub
	Partial Private Sub OnIsFolderChanging(ByVal value As Boolean)
	End Sub
	Partial Private Sub OnIsFolderChanged()
	End Sub
	Partial Private Sub OnParentIdChanging(ByVal value As Integer)
	End Sub
	Partial Private Sub OnParentIdChanged()
	End Sub
	Partial Private Sub OnDataChanging(ByVal value As System.Data.Linq.Binary)
	End Sub
	Partial Private Sub OnDataChanged()
	End Sub
	Partial Private Sub OnLastWriteTimeChanging(ByVal value As System.Nullable(Of System.DateTime))
	End Sub
	Partial Private Sub OnLastWriteTimeChanged()
	End Sub
	#End Region

	Public Sub New()
		OnCreated()
	End Sub

	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=True, IsDbGenerated:=True)> _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set(ByVal value As Integer)
			If (Me._Id <> value) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging()
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged()
			End If
		End Set
	End Property

	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=False)> _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set(ByVal value As String)
			If (Me._Name <> value) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging()
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged()
			End If
		End Set
	End Property

	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsFolder", DbType:="Bit NOT NULL")> _
	Public Property IsFolder() As Boolean
		Get
			Return Me._IsFolder
		End Get
		Set(ByVal value As Boolean)
			If (Me._IsFolder <> value) Then
				Me.OnIsFolderChanging(value)
				Me.SendPropertyChanging()
				Me._IsFolder = value
				Me.SendPropertyChanged("IsFolder")
				Me.OnIsFolderChanged()
			End If
		End Set
	End Property

	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentId", DbType:="Int NOT NULL")> _
	Public Property ParentId() As Integer
		Get
			Return Me._ParentId
		End Get
		Set(ByVal value As Integer)
			If (Me._ParentId <> value) Then
				Me.OnParentIdChanging(value)
				Me.SendPropertyChanging()
				Me._ParentId = value
				Me.SendPropertyChanged("ParentId")
				Me.OnParentIdChanged()
			End If
		End Set
	End Property

	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Data", DbType:="VarBinary(MAX)", CanBeNull:=True, UpdateCheck:=UpdateCheck.Never)> _
	Public Property Data() As System.Data.Linq.Binary
		Get
			Return Me._Data.Value
		End Get
		Set(ByVal value As System.Data.Linq.Binary)
			If (Me._Data.Value IsNot value) Then
				Me.OnDataChanging(value)
				Me.SendPropertyChanging()
				Me._Data.Value = value
				Me.SendPropertyChanged("Data")
				Me.OnDataChanged()
			End If
		End Set
	End Property

	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastWriteTime", DbType:="DateTime")> _
	Public Property LastWriteTime() As System.Nullable(Of System.DateTime)
		Get
			Return Me._LastWriteTime
		End Get
		Set(ByVal value As System.Nullable(Of System.DateTime))
			If (Not Me._LastWriteTime.Equals(value)) Then
				Me.OnLastWriteTimeChanging(value)
				Me.SendPropertyChanging()
				Me._LastWriteTime = value
				Me.SendPropertyChanged("LastWriteTime")
				Me.OnLastWriteTimeChanged()
			End If
		End Set
	End Property

	Public Event PropertyChanging As PropertyChangingEventHandler Implements INotifyPropertyChanging.PropertyChanging

	Public Event PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged

	Protected Overridable Sub SendPropertyChanging()
		If (Me.PropertyChangingEvent IsNot Nothing) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub

	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As String)
		If (Me.PropertyChangedEvent IsNot Nothing) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
'INSTANT VB TODO TASK: There is no equivalent to #pragma directives in VB.NET:
'#pragma warning restore 1591
