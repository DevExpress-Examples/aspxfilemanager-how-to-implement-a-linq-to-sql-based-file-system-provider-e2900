'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18051
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FmExampleDb")>  _
Partial Public Class DbFileSystemDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertDbFileSystemItem(instance As DbFileSystemItem)
    End Sub
  Partial Private Sub UpdateDbFileSystemItem(instance As DbFileSystemItem)
    End Sub
  Partial Private Sub DeleteDbFileSystemItem(instance As DbFileSystemItem)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("FmExampleDbConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property DbFileSystemItems() As System.Data.Linq.Table(Of DbFileSystemItem)
		Get
			Return Me.GetTable(Of DbFileSystemItem)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FileSystem")>  _
Partial Public Class DbFileSystemItem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Name As String
	
	Private _IsFolder As Boolean
	
	Private _ParentId As Integer
	
	Private _Data As System.Data.Linq.Link(Of System.Data.Linq.Binary)
	
	Private _LastWriteTime As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNameChanging(value As String)
    End Sub
    Partial Private Sub OnNameChanged()
    End Sub
    Partial Private Sub OnIsFolderChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsFolderChanged()
    End Sub
    Partial Private Sub OnParentIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnParentIdChanged()
    End Sub
    Partial Private Sub OnDataChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnDataChanged()
    End Sub
    Partial Private Sub OnLastWriteTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnLastWriteTimeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Name", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Name() As String
		Get
			Return Me._Name
		End Get
		Set
			If (String.Equals(Me._Name, value) = false) Then
				Me.OnNameChanging(value)
				Me.SendPropertyChanging
				Me._Name = value
				Me.SendPropertyChanged("Name")
				Me.OnNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsFolder", DbType:="Bit NOT NULL")>  _
	Public Property IsFolder() As Boolean
		Get
			Return Me._IsFolder
		End Get
		Set
			If ((Me._IsFolder = value)  _
						= false) Then
				Me.OnIsFolderChanging(value)
				Me.SendPropertyChanging
				Me._IsFolder = value
				Me.SendPropertyChanged("IsFolder")
				Me.OnIsFolderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ParentId", DbType:="Int NOT NULL")>  _
	Public Property ParentId() As Integer
		Get
			Return Me._ParentId
		End Get
		Set
			If ((Me._ParentId = value)  _
						= false) Then
				Me.OnParentIdChanging(value)
				Me.SendPropertyChanging
				Me._ParentId = value
				Me.SendPropertyChanged("ParentId")
				Me.OnParentIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Data", DbType:="VarBinary(MAX)", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Data() As System.Data.Linq.Binary
		Get
			Return Me._Data.Value
		End Get
		Set
			If (Object.Equals(Me._Data.Value, value) = false) Then
				Me.OnDataChanging(value)
				Me.SendPropertyChanging
				Me._Data.Value = value
				Me.SendPropertyChanged("Data")
				Me.OnDataChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastWriteTime", DbType:="DateTime")>  _
	Public Property LastWriteTime() As System.Nullable(Of Date)
		Get
			Return Me._LastWriteTime
		End Get
		Set
			If (Me._LastWriteTime.Equals(value) = false) Then
				Me.OnLastWriteTimeChanging(value)
				Me.SendPropertyChanging
				Me._LastWriteTime = value
				Me.SendPropertyChanged("LastWriteTime")
				Me.OnLastWriteTimeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
